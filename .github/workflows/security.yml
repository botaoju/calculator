name: Security and Quality Checks

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run security checks weekly
    - cron: '0 2 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements_android.txt ]; then pip install -r requirements_android.txt; fi
    
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Run Bandit security scan
      run: |
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -ll
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          safety-report.json
          bandit-report.json
        retention-days: 30
        if-no-files-found: ignore

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run Black formatter check
      run: |
        black --check --diff .
    
    - name: Run isort import sorting check
      run: |
        isort --check-only --diff .
    
    - name: Run flake8 linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run pylint
      run: |
        pylint **/*.py --exit-zero --output-format=text --reports=y > pylint-report.txt || true
        cat pylint-report.txt
    
    - name: Upload quality reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          pylint-report.txt
        retention-days: 30
        if-no-files-found: ignore